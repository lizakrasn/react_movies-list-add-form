{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Input/Input.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Input","props","value","name","placeholder","labelText","id","onChange","error","htmlFor","type","initialState","initialErrors","regexUrl","isValidUrl","test","isRequiredField","validators","NewMovie","state","inputs","errors","handleValue","event","target","setState","prevState","handleSubmit","preventDefault","validatedValues","Object","entries","filter","length","addMovie","reduce","acc","this","onSubmit","React","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"ixEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,yBCvBGK,EAAQ,SAACC,GAAW,IACvBC,EAMID,EANJC,MACNC,EAKUF,EALVE,KACAC,EAIUH,EAJVG,YACAC,EAGUJ,EAHVI,UACAC,EAEUL,EAFVK,GACAC,EACUN,EADVM,SACAC,EAAUP,EAAVO,MAEF,OACE,yBAAKnB,UAAU,SACb,2BAAOA,UAAU,QAAQoB,QAASH,GAC/BD,EACD,yBAAKhB,UAAU,WACb,2BACEA,UAAYmB,EAAkB,kBAAV,QACpBL,KAAMA,GAAQG,EACdA,GAAIA,EACJI,KAAK,OACLR,MAAOA,EACPE,YAAaA,EACbG,SAAUA,QAQtBP,EAAMP,aAAe,CACnBU,KAAM,KACNK,MAAO,MC9BT,IAAMG,EAAe,CACnB1B,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,IAGJa,EAAgB,CACpB3B,MAAO,KACPE,OAAQ,KACRC,QAAS,KACTW,OAAQ,MAIJc,EAAW,qKAEjB,SAASC,EAAWZ,GAClB,OAAOW,EAASE,KAAKb,GACjB,KACA,+BAGN,SAASc,EAAgBd,GACvB,OAAQA,EAEJ,KADA,wBAIN,IAAMe,EAAa,CACjBhC,MAAO+B,EACP9B,YAAa,kBAAM,MACnBC,OAAQ2B,EACR1B,QAAS0B,EACTf,OAAQiB,GAGGE,EAAb,4MACEC,MAAQ,CACNC,OAAQT,EACRU,OAAQT,GAHZ,EAMEU,YAAc,SAACC,GAAW,IAAD,EACCA,EAAMC,OAAtBrB,EADe,EACfA,KAAMD,EADS,EACTA,MAEd,EAAKuB,UAAS,SAACC,GACb,MAAO,CAAEN,OAAO,2BACXM,EAAUN,QADA,kBAEZjB,EAAOD,SAZhB,EAiBEyB,aAAe,SAACJ,GACdA,EAAMK,iBAEN,EAAKH,UAAS,SAACC,GACb,IAAMG,EAAkBC,OAAOC,QAAQL,EAAUN,QAAQxB,KACvD,mCAAEO,EAAF,KAAQD,EAAR,WAAmB,CAACC,EAAMc,EAAWd,GAAMD,OAC3C8B,QAAO,+CAA6B,OAA7B,QAET,OAA+B,IAA3BH,EAAgBI,QAClB,EAAKhC,MAAMiC,SAASR,EAAUN,QAEvB,CACLA,OAAQT,EACRU,OAAQT,IAWL,CACLS,OARaQ,EAAgBM,QAAO,SAACC,EAAD,GAAyB,IAAD,mBAAjBjC,EAAiB,KAAXK,EAAW,KAC5D,OAAO,2BACF4B,GADL,kBAEGjC,EAAOK,MAET,SAvCT,uDA+CY,IAAD,EACoB6B,KAAKlB,MAAxBC,EADD,EACCA,OAAQC,EADT,EACSA,OAEhB,OACE,0BAAMlB,KAAK,WAAWmC,SAAUD,KAAKV,cACnC,kBAAC,EAAD,CACEzB,MAAOkB,EAAOnC,MACdqB,GAAG,QACHD,UAAU,QACVD,YAAY,cACZG,SAAU8B,KAAKf,YACfd,MAAOa,EAAOpC,QAEhB,uBAAGI,UAAU,kBAAkBgC,EAAOpC,OAEtC,kBAAC,EAAD,CACEiB,MAAOkB,EAAOlC,YACdmB,UAAU,cACVC,GAAG,cACHF,YAAY,oBACZG,SAAU8B,KAAKf,cAGjB,kBAAC,EAAD,CACEpB,MAAOkB,EAAOjC,OACdkB,UAAU,YACVC,GAAG,SACHF,YAAY,sBACZG,SAAU8B,KAAKf,YACfd,MAAOa,EAAOlC,SAEhB,uBAAGE,UAAU,kBAAkBgC,EAAOlC,QAEtC,kBAAC,EAAD,CACEe,MAAOkB,EAAOhC,QACdiB,UAAU,WACVC,GAAG,UACHF,YAAY,sBACZG,SAAU8B,KAAKf,YACfd,MAAOa,EAAOjC,UAEhB,uBAAGC,UAAU,kBAAkBgC,EAAOjC,SAEtC,kBAAC,EAAD,CACEc,MAAOkB,EAAOrB,OACdM,UAAU,UACVC,GAAG,SACHF,YAAY,eACZG,SAAU8B,KAAKf,YACfd,MAAOa,EAAOtB,SAEhB,uBAAGV,UAAU,kBAAkBgC,EAAOtB,QAEtC,yBAAKV,UAAU,SACb,4BAAQA,UAAU,iBAAiBqB,KAAK,UAAxC,qBArGV,GAA8B6B,IAAMC,W,QCpCvBC,EAAb,4MACEtB,MAAQ,CACNxB,OAAQ+C,GAFZ,EAKER,SAAW,SAACrC,GACV,EAAK4B,UAAS,SAAAC,GAAS,MAAK,CAAE/B,OAAO,CAAEE,GAAH,mBAAa6B,EAAU/B,cAN/D,uDASY,IACAA,EAAW0C,KAAKlB,MAAhBxB,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAU6C,SAAUG,KAAKH,iBAlBnC,GAAyBM,aCDzBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2635b722.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Input = (props) => {\n  const { value,\n    name,\n    placeholder,\n    labelText,\n    id,\n    onChange,\n    error } = props;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {labelText}\n        <div className=\"control\">\n          <input\n            className={!error ? 'input' : 'input is-danger'}\n            name={name || id}\n            id={id}\n            type=\"text\"\n            value={value}\n            placeholder={placeholder}\n            onChange={onChange}\n          />\n        </div>\n      </label>\n    </div>\n  );\n};\n\nInput.defaultProps = {\n  name: null,\n  error: null,\n};\n\nInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  placeholder: PropTypes.string.isRequired,\n  labelText: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from '../Input/Input';\n\nconst initialState = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nconst initialErrors = {\n  title: null,\n  imgUrl: null,\n  imdbUrl: null,\n  imdbId: null,\n};\n\n// eslint-disable-next-line\nconst regexUrl = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nfunction isValidUrl(value) {\n  return regexUrl.test(value)\n    ? null\n    : 'You should enter a valid Url';\n}\n\nfunction isRequiredField(value) {\n  return !value\n    ? 'The field is required'\n    : null;\n}\n\nconst validators = {\n  title: isRequiredField,\n  description: () => null,\n  imgUrl: isValidUrl,\n  imdbUrl: isValidUrl,\n  imdbId: isRequiredField,\n};\n\nexport class NewMovie extends React.Component {\n  state = {\n    inputs: initialState,\n    errors: initialErrors,\n  };\n\n  handleValue = (event) => {\n    const { name, value } = event.target;\n\n    this.setState((prevState) => {\n      return { inputs: {\n        ...prevState.inputs,\n        [name]: value,\n      } };\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState((prevState) => {\n      const validatedValues = Object.entries(prevState.inputs).map(\n        ([name, value]) => [name, validators[name](value)],\n      ).filter(([name, error]) => error !== null);\n\n      if (validatedValues.length === 0) {\n        this.props.addMovie(prevState.inputs);\n\n        return {\n          inputs: initialState,\n          errors: initialErrors,\n        };\n      }\n\n      const errors = validatedValues.reduce((acc, [name, error]) => {\n        return {\n          ...acc,\n          [name]: error,\n        };\n      }, {});\n\n      return {\n        errors,\n      };\n    });\n  }\n\n  render() {\n    const { inputs, errors } = this.state;\n\n    return (\n      <form name=\"addMovie\" onSubmit={this.handleSubmit}>\n        <Input\n          value={inputs.title}\n          id=\"title\"\n          labelText=\"Title\"\n          placeholder=\"Add a title\"\n          onChange={this.handleValue}\n          error={errors.title}\n        />\n        <p className=\"help is-danger\">{errors.title}</p>\n\n        <Input\n          value={inputs.description}\n          labelText=\"Description\"\n          id=\"description\"\n          placeholder=\"Add a description\"\n          onChange={this.handleValue}\n        />\n\n        <Input\n          value={inputs.imgUrl}\n          labelText=\"Image Url\"\n          id=\"imgUrl\"\n          placeholder=\"https://example.com\"\n          onChange={this.handleValue}\n          error={errors.imgUrl}\n        />\n        <p className=\"help is-danger\">{errors.imgUrl}</p>\n\n        <Input\n          value={inputs.imdbUrl}\n          labelText=\"Imdb Url\"\n          id=\"imdbUrl\"\n          placeholder=\"https://example.com\"\n          onChange={this.handleValue}\n          error={errors.imdbUrl}\n        />\n        <p className=\"help is-danger\">{errors.imdbUrl}</p>\n\n        <Input\n          value={inputs.imdbId}\n          labelText=\"Imdb Id\"\n          id=\"imdbId\"\n          placeholder=\"Add a imdbId\"\n          onChange={this.handleValue}\n          error={errors.imdbId}\n        />\n        <p className=\"help is-danger\">{errors.imdbId}</p>\n\n        <div className=\"field\">\n          <button className=\"button is-link\" type=\"submit\">\n            Add a movie\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({ movies: [movie, ...prevState.movies] }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}